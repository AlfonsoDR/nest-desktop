.dev_base:
  image: ubuntu:20.04
  only:
    - dev
  tags:
    - docker-runner

stages:
  - build
  - packaging
  - deploy

#
# BUILD
#

build_app_dev:
  extents: .dev_base
  stage: build
  image: node:16-alpine
  script:
    - yarn install
    - yarn build
    - VERSION=`node -p "require('./package.json').version"`
    - echo '__version__ = "'${VERSION}b${CI_PIPELINE_IID}'"' >> nest_desktop/__init__.py
  artifacts:
    paths:
      - nest_desktop

#
# PACKAGING
#

package_app_dev:
  extents: .dev_base
  stage: packaging
  image: python:latest
  needs:
    - build_app_dev
  script:
    - python setup.py sdist bdist_wheel
  artifacts:
    paths:
      - dist

#
# DEPLOY
#

upload_app_testpypi:
  extents: .dev_base
  stage: deploy
  image: python:latest
  needs:
    - package_app_dev
  script:
    - pip install twine
    - TWINE_PASSWORD=${PYPI_ACCESS_TOKEN} TWINE_USERNAME=__token__ python -m twine upload --repository testpypi dist/*

# build_ebrains_docker_dev:
#   extents: .dev_base
#   stage: deploy
#   before_script:
#     - docker login -u $DOCKER_REGISTRY_USER -p $DOCKER_REGISTRY_TOKEN docker-registry.ebrains.eu
#   script:
#     - docker build -t docker-registry.ebrains.eu/nest/nest-desktop:dev.$CI_PIPELINE_ID .
#     - docker push docker-registry.ebrains.eu/nest/nest-desktop:dev.$CI_PIPELINE_ID
#   tags:
#     - shell-runner
