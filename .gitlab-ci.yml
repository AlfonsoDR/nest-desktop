stages:
  - build
  - deploy
  

#
# BUILD
#

.build_app_base:
  stage: build
  image: node:16-alpine
  artifacts:
    paths:
      - nest_desktop
      - version.txt
  before_script:
    - yarn install
    - yarn build
    - VERSION=`node -p "require('./package.json').version"`
  tags:
    - docker-runner


build_app_dev:
  extends: .build_app_base
  rules:
    - if: $CI_COMMIT_BRANCH == "gitlab-ci"
  script:
    - VERSION_DEV="${VERSION}dev${CI_PIPELINE_IID}"
    - echo "VERSION='${VERSION_DEV}'" >> version.txt
    - echo "__version__ = '${VERSION_DEV}'" >> nest_desktop/__init__.py
    
build_app_prod:
  extends: .build_app_base
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
  script:
    - echo "VERSION='${VERSION}'" >> version.txt
    - echo "__version__ = '${VERSION}'" >> nest_desktop/__init__.py


#
# DEPLOY PYTHON PACKAGE
#

.deploy_pip_base:
  stage: deploy
  image: python:latest
  before_script:
    - pip install twine
    - python setup.py sdist bdist_wheel
  tags:
    - docker-runner

deploy_testpypi:
  extends: .deploy_pip_base  
  needs:
    - build_app_dev
  rules:
    - if: $CI_COMMIT_BRANCH == "gitlab-ci"
      when: manual
  script:
    - TWINE_PASSWORD=${TESTPYPI_ACCESS_TOKEN} TWINE_USERNAME=__token__ python -m twine upload --repository testpypi dist/*

deploy_pypi:
  extends: .deploy_pip_base  
  needs:
    - build_app_prod
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
      when: manual
  script:
    - TWINE_PASSWORD=${PYPI_ACCESS_TOKEN} TWINE_USERNAME=__token__ python -m twine upload dist/*


#
# DEPLOY DOCKER IMAGE ON EBRAINS
#

.deploy_ebrains_docker_base:
  stage: deploy
  image: ubuntu:20.04
  before_script:
    - source version.txt
    - echo "${EBRAINS_DOCKER_REGISTRY_TOKEN}" | docker login -u ${EBRAINS_DOCKER_REGISTRY_USER} --password-stdin docker-registry.ebrains.eu
  script:    
    - docker build -f .gitlab-ci-docker/Dockerfile -t docker-registry.ebrains.eu/nest/nest-desktop:${VERSION} .
    - docker push docker-registry.ebrains.eu/nest/nest-desktop:${VERSION}
  after_script:
    - docker logout docker-registry.ebrains.eu
  tags:
    - shell-runner

deploy_ebrains_docker_dev:
  extends: .deploy_ebrains_docker_base
  needs:
    - build_app_dev
  rules:
    - if: $CI_COMMIT_BRANCH == "gitlab-ci"

deploy_ebrains_docker:
  extends: .deploy_ebrains_docker_base
  needs:
    - build_app_prod
  rules:
    - if: $CI_COMMIT_BRANCH == "main"


#
# DEPLOY DOCKER IMAGE ON DOCKER HUB
#

.deploy_docker_hub_base:
  stage: deploy
  image: ubuntu:20.04
  before_script:
    - source version.txt
    - echo "${DOCKER_HUB_ACCESS_TOKEN}" | docker login -u ${DOCKER_HUB_ACCESS_USER} --password-stdin
  script:
    - docker build -f .gitlab-ci-docker/Dockerfile -t nestdesktop/app:${VERSION} .
    - docker push nestdesktop/app:${VERSION}
  after_script:
    - docker logout
  tags:
    - shell-runner

deploy_docker_hub_dev:
  extends: .deploy_docker_hub_base
  needs:
    - build_app_dev
  rules:
    - if: $CI_COMMIT_BRANCH == "gitlab-ci"

deploy_docker_hub:
  extends: .deploy_docker_hub_base
  needs:
    - build_app_prod
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
